diff --git a/tests/test_hs071.py b/tests/test_hs071.py
index f6ccb5b..7d1e2ad 100644
--- a/tests/test_hs071.py
+++ b/tests/test_hs071.py
@@ -1,6 +1,7 @@
 """Test solution of problem HS71 from the Hock & Schittkowski collection"""
 
 # Standard Python modules
+import sys
 import unittest
 
 # External modules
@@ -206,6 +207,8 @@ class TestHS71(OptTest):
     @parameterized.expand(["SNOPT", "IPOPT", "SLSQP", "PSQP", "CONMIN", "NLPQLP", "ParOpt"])
     def test_optimization(self, optName):
         self.optName = optName
+        if optName == "IPOPT" and sys.platform in ["win32", "cygwin"]:
+            self.skipTest("Skipping IPOPT on Windows")
         self.setup_optProb()
         optOptions = self.optOptions.pop(optName, None)
         sol = self.optimize(optOptions=optOptions)
diff --git a/tests/test_large_sparse.py b/tests/test_large_sparse.py
index 5f88088..f13d8e3 100644
--- a/tests/test_large_sparse.py
+++ b/tests/test_large_sparse.py
@@ -7,6 +7,7 @@ Only testing with SNOPT, which supports sparse formats.
 """
 
 # Standard Python modules
+import sys
 import unittest
 
 # External modules
@@ -113,6 +114,8 @@ class TestLarge(OptTest):
     )
     def test_opt(self, optName, sparse):
         self.optName = optName
+        if optName == "IPOPT" and sys.platform in ["win32", "cygwin"]:
+            self.skipTest("Skipping IPOPT on Windows")
         self.setup_optProb(sparse=sparse)
         sol = self.optimize()
         self.assert_solution_allclose(sol, 1e-5, partial_x=True)
